# cd C:\OGL\visualizator\_BUILD
# cmake -G"Visual Studio 15 2017" C:\OGL\visualizator

# Libraries used:
#	opengl32.lib	(la incluye el compilador [SDK] de Windows, luego puede aÃ±adirse sin especificar ruta)
#	glu32			(parece no necesaria)
#	glfw3.lib
#	glew32s.lib
#	glm_static.lib

# CMake entry point
cmake_minimum_required (VERSION 3.0)
project (hans_visualizator)

find_package(OpenGL REQUIRED)
#find_package(glfw3 3.3 REQUIRED)

# Generate a list of all files that match the globbing expressions and store it into the variable. In this case, all the compiled libraries.
file(GLOB all_libs 
	../../glfw-3.3/build/src/Release/*
	../../glew-2.1.0/lib/Release/Win32/*
	../../glm-0.9.9.5/build/glm/Release/*
)

set(ALL_LIBS
	${OPENGL_LIBRARY}
	${all_libs}
	#glfw
	#GLEW_1130
)

MESSAGE(STATUS "OPENGL_LIBRARY: " ${OPENGL_LIBRARY})

# include_directories()
# add_subdirectory()

add_definitions(
	#-DTW_STATIC
	#-DTW_NO_LIB_PRAGMA
	#-DTW_NO_DIRECT3D
	-DGLEW_STATIC
	#-D_CRT_SECURE_NO_WARNINGS
)

## visualizator_class -----------------------------------------------------------

add_library(visualizator_class STATIC
	#visualizator_class/main.cpp
	visualizator_class/controls.hpp
	visualizator_class/controls.cpp
	visualizator_class/shader.hpp
	visualizator_class/shader.cpp
	visualizator_class/visualizatorClass.hpp
	visualizator_class/visualizatorClass.cpp
	visualizator_class/ColorFragmentShader.fragmentshader
	visualizator_class/TransformVertexShader.vertexshader
)

# Link the include files (.h)
target_include_directories( visualizator_class PUBLIC
	../../glfw-3.3/include
	../../glew-2.1.0/include
	../../glm-0.9.9.5
	visualizator_class
)	

# Link the compiled libraries        ---> Libraries don't link to .libs, just to the includes
target_link_libraries(visualizator_class ${ALL_LIBS})

install(TARGETS visualizator_class DESTINATION ${CURRENT_CMAKE_DIR}/bin)
